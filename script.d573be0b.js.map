{"version":3,"sources":["js/script.js"],"names":["list","document","getElementById","filter","stats","querySelector","listItems","ws","WebSocket","location","host","API_KEY","addEventListener","e","filterData","target","value","classRemove","className","map","val","classList","remove","searchTerm","forEach","item","innerText","toLowerCase","includes","add","getData","url","fetch","method","headers","accept","response","ok","Error","status","json","runApi","countryNames","result","innerHTML","country","li","createElement","push","appendChild","resultLi","querySelectorAll","toggle","getStats","options","then","data","confirmed","deaths","lastChecked","lastReported","catch","err","console","error"],"mappings":"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","file":"script.d573be0b.js","sourceRoot":"..\\src","sourcesContent":["const list = document.getElementById(\"result\");\r\nconst filter = document.getElementById(\"filter\");\r\nconst stats = document.querySelector(\".stats\");\r\nconst listItems = [];\r\n\r\nconst ws = new WebSocket(\"wss://\" + location.host + \"/\");\r\n\r\nconst API_KEY = process.env.API;\r\n\r\nfilter.addEventListener(\"input\", (e) => {\r\n  filterData(e.target.value);\r\n});\r\n\r\nfunction classRemove(value, className) {\r\n  value.map((val) => {\r\n    val.classList.remove(className);\r\n  });\r\n}\r\n\r\nfunction filterData(searchTerm) {\r\n  listItems.forEach((item) => {\r\n    if (item.innerText.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n      item.classList.remove(\"hide\");\r\n    } else {\r\n      item.classList.add(\"hide\");\r\n    }\r\n  });\r\n}\r\n\r\nconst getData = async (url, host) => {\r\n  const response = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n      \"X-RapidAPI-Key\": API_KEY,\r\n      \"X-RapidAPI-Host\": host,\r\n    },\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! status: ${response.status}`);\r\n  }\r\n  return await response.json();\r\n};\r\n\r\nconst runApi = async () => {\r\n  // GET COUNTRIES DATA\r\n  const countryNames = await getData(\r\n    \"https://covid-193.p.rapidapi.com/countries\",\r\n    \"covid-193.p.rapidapi.com\"\r\n  );\r\n  result.innerHTML = \"\";\r\n  // UPDATE UI WITH DATA\r\n  countryNames.response.map((country) => {\r\n    const li = document.createElement(\"li\");\r\n    li.classList.add(\"country-list__item\");\r\n    listItems.push(li);\r\n    li.innerHTML = `\r\n        <div class =\"country-info\">\r\n      <h4>${country}</h4>\r\n        </div>\r\n        `;\r\n    list.appendChild(li);\r\n  });\r\n  const resultLi = [...document.querySelectorAll(\".country-list__item\")];\r\n\r\n  resultLi.map((result) => {\r\n    result.addEventListener(\"click\", (e) => {\r\n      classRemove(resultLi, \"activeRed\");\r\n      result.classList.toggle(\"activeRed\");\r\n\r\n      getStats(e.target.innerText);\r\n    });\r\n  });\r\n};\r\nrunApi();\r\n\r\nasync function getStats(value) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"X-RapidAPI-Key\": API_KEY,\r\n      \"X-RapidAPI-Host\": \"covid-19-coronavirus-statistics.p.rapidapi.com\",\r\n    },\r\n  };\r\n  // GET STATS DATA\r\n  await fetch(\r\n    `https://covid-19-coronavirus-statistics.p.rapidapi.com/v1/total?country=${value}`,\r\n    options\r\n  )\r\n    .then((response) => response.json())\r\n    // UPDATE UI WITH STATS DATA\r\n    .then(\r\n      (response) =>\r\n        (stats.innerHTML = `\r\n        <h1>Statistics for ${response.data.location}:</h1>\r\n    <h2>Confirmed cases: ${response.data.confirmed}</h2>\r\n    <h3>Deaths: ${response.data.deaths}</h3>\r\n    <h4>Last Checked: ${response.data.lastChecked}</h4>\r\n    <h4>Last reported: ${response.data.lastReported}</h4>\r\n    `)\r\n    )\r\n    .catch((err) => console.error(err));\r\n}\r\n"]}